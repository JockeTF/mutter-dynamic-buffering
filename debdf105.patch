commit debdf105e608749e420915beda3d07f9127130c4
Author: Daniel van Vugt <daniel.van.vugt@canonical.com>
Date:   Tue Nov 2 19:04:04 2021 +0800

    onscreen/native: Keep a reference to the objects used
    
    Otherwise they may get destroyed during hotplug events, after which we
    might try using them in the final outstanding frame notification
    callbacks.

diff --git a/src/backends/native/meta-onscreen-native.c b/src/backends/native/meta-onscreen-native.c
index b39308e68..9dc080a0c 100644
--- a/src/backends/native/meta-onscreen-native.c
+++ b/src/backends/native/meta-onscreen-native.c
@@ -2136,10 +2136,10 @@ meta_onscreen_native_new (MetaRendererNative *renderer_native,
                                   "height", height,
                                   NULL);
 
-  onscreen_native->renderer_native = renderer_native;
-  onscreen_native->render_gpu = render_gpu;
-  onscreen_native->output = output;
-  onscreen_native->crtc = crtc;
+  onscreen_native->renderer_native = g_object_ref (renderer_native);
+  onscreen_native->render_gpu = g_object_ref (render_gpu);
+  onscreen_native->output = g_object_ref (output);
+  onscreen_native->crtc = g_object_ref (crtc);
 
   return onscreen_native;
 }
@@ -2194,6 +2194,11 @@ meta_onscreen_native_dispose (GObject *object)
                    secondary_gpu_state_free);
   g_clear_pointer (&onscreen_native->next_post.rectangles, g_free);
   onscreen_native->next_post.n_rectangles = 0;
+
+  g_clear_object (&onscreen_native->crtc);
+  g_clear_object (&onscreen_native->output);
+  g_clear_object (&onscreen_native->render_gpu);
+  g_clear_object (&onscreen_native->renderer_native);
 }
 
 static void
